// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using NorthOlderModel.Models;
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using NorthOlderModel.Models;

namespace NorthOlderModel.Context
{
    public partial class NorthwindContext : DbContext
    {
        public NorthwindContext()
        {
        }

        public NorthwindContext(DbContextOptions<NorthwindContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ContactType> ContactType { get; set; }
        public virtual DbSet<Customers> Customers { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {

                optionsBuilder.UseSqlServer("Data Source=.\\SQLEXPRESS;Initial Catalog=NorthWindAzure3;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Customers>(entity =>
            {
                entity.HasKey(e => e.CustomerIdentifier)
                    .HasName("PK_Customers_1");

                entity.Property(e => e.CustomerIdentifier).HasComment("Id");
                entity.Property(e => e.CompanyName).HasComment("Company name");
                entity.Property(e => e.ContactName).HasComment("Contact");
                entity.Property(e => e.Address).HasComment("Street");
                entity.Property(e => e.City).HasComment("Town");
                entity.Property(e => e.Region).HasComment("Region");
                entity.Property(e => e.PostalCode).HasComment("Zip code");
                entity.Property(e => e.Country).HasComment("Country");
                entity.Property(e => e.Phone).HasComment("Office phone");
                entity.Property(e => e.Fax).HasComment("Office fax");
                entity.Property(e => e.ContactTypeIdentifier).HasComment("Type id");

                entity.HasOne(d => d.ContactTypeIdentifierNavigation)
                    .WithMany(p => p.Customers)
                    .HasForeignKey(d => d.ContactTypeIdentifier)
                    .HasConstraintName("FK_Customers_ContactType");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}